# 6. Реализовать простую систему хранения данных о суммах продаж булочной.
# Должно быть два скрипта с интерфейсом командной строки: для записи данных и для вывода на экран записанных данных.
# При записи передавать из командной строки значение суммы продаж.
# Для чтения данных реализовать в командной строке следующую логику:
# просто запуск скрипта — выводить все записи;
# запуск скрипта с одним параметром-числом — выводить все записи с номера, равного этому числу, до конца;
# запуск скрипта с двумя числами — выводить записи, начиная с номера, равного первому числу, по номер,
# равный второму числу, включительно.
# 7. Подумать, как избежать чтения всего файла при реализации второго и третьего случаев.
# Данные хранить в файле bakery.csv в кодировке utf-8. Нумерация записей начинается с 1. Примеры запуска скриптов:
# 7. * (вместо 6) Добавить возможность редактирования данных при помощи отдельного скрипта:
# передаём ему номер записи и новое значение. При этом файл не должен читаться целиком — обязательное требование.
# Предусмотреть ситуацию, когда пользователь вводит номер записи, которой не существует.

import sys


def info_write(info):
    with open('bakery.csv', 'a', encoding='utf-8') as f_:
        f_.write(f'{info:>15}\n')


len_line = 15
try:
    command = sys.argv[1]
except IndexError:
    print('Для записи данных введите "write" \nДля вывода данных введите "read"')
else:
    if command == 'write':
        try:
            text = sys.argv[2]
            info_write(text)
        except NameError:
            print('Введите значение суммы продажи')
        except IndexError:
            print('Введите значение суммы продажи')
    elif command == 'read':
        try:
            with open('bakery.csv', 'r', encoding='utf-8') as f1:
                if sys.argv[2]:
                    num = int(sys.argv[2])
                    f1.seek(num * len_line)
                    for line in f1:
                        print(line, end='')
                elif sys.argv[2] and sys.argv[3]:
                    num = int(sys.argv[2])
                    num_2 = int(sys.argv[3])
                    f1.seek(num * len_line)
                    for _ in range(num_2 - num):
                        f1.readline().splitlines()
                else:
                    for line in f1:
                        print(line, end='')
        except IndexError:
            with open('bakery.csv', 'r', encoding='utf-8') as f1:
                for line in f1:
                    print(line, end='')